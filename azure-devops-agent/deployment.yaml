apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: $NS
  name: azure-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: $NS
  name: azure-agent-role
rules:
- apiGroups: [""] 
  resources: ["pods","pods/log"]
  verbs: ["get", "watch", "list","create","patch","update","delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create","patch","update","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: azure-agent-role-binding
  namespace: $NS
subjects:
- kind: ServiceAccount
  name: azure-agent
  namespace: $NS
roleRef:
  kind: Role
  name: azure-agent-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azdevops-deployment
  namespace: $NS
  labels:
    app: azdevops-agent
spec:
  replicas: 3 
  selector:
    matchLabels:
      app: azdevops-agent
  template:
    metadata:
      labels:
        app: azdevops-agent
    spec:
      containers:
      - name: kubepodcreation
        image: $AZURE_ACR_NAME.azurecr.io/$(CYCLE_IMAGE_NAME):$(IMAGE_VERSION_GLOBAL)
        env:
          - name: AZP_URL
            valueFrom:
              secretKeyRef:
                name: azdevops
                key: AZP_URL
          - name: AZP_TOKEN
            valueFrom:
              secretKeyRef:
                name: azdevops
                key: AZP_TOKEN
          - name: AZP_POOL
            valueFrom:
              secretKeyRef:
                name: azdevops
                key: AZP_POOL
          - name: AZP_AGENT_NAME
            valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name  
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2048Mi"
            cpu: "1000m"
      serviceAccountName: azure-agent
